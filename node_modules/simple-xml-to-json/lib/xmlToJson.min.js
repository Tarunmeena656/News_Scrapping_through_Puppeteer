"use strict";function e(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}const t=e=>{if(!e)return null;const n={};switch(e.type){case"ELEMENT":{let s={};const a=E(e.value.attributes),T=t(e.value.children);if(a&&(s=Object.assign(s,a)),T){const t=r(e.value.children);s=Object.assign(s,t)}n[e.value.type]=s;break}case"ATTRIBUTE":{const t=e.value;n[t.name]=t.value;break}case"CONTENT":return{content:e.value}}return n},r=e=>e&&Array.isArray(e)&&0!==e.length?n(e)?{content:e[0].value}:{children:e.map(t)}:null,n=e=>e&&Array.isArray(e)&&1===e.length&&"CONTENT"===e[0].type,E=e=>{if(e&&Array.isArray(e)){return e.map(t).reduce(((e,t)=>Object.assign(e,t)),{})}return null};var s={convert:e=>t(e.value.children[0])};var a={Token:(e,t)=>({type:e,value:t}),TOKEN_TYPE:{OPEN_BRACKET:"OPEN_BRACKET",ELEMENT_TYPE:"ELEMENT_TYPE",CLOSE_ELEMENT:"CLOSE_ELEMENT",ATTRIB_NAME:"ATTRIB_NAME",ATTRIB_VALUE:"ATTRIB_VALUE",ASSIGN:"ASSIGN",CLOSE_BRACKET:"CLOSE_BRACKET",CONTENT:"CONTENT",EOF:"EOF"}};const{Token:T,TOKEN_TYPE:u}=a,c=T("EOF"),l=e=>" "===e||"\n"===e||"\r"===e||"\t"===e,o=e=>e.replace(/'/g,'"');var N={createLexer:function(e){let t=null,r=(e=>{let t=0;for(;t<e.length&&l(e[t]);)t++;return((e,t)=>{if(e.startsWith("<?xml",t)){const r=e.length;for(;t<r;)if("?"!==e[t])t++;else{if(">"===e[t+1])return t+2;t++}}return t})(e,t)})(e);const n=()=>e[r],E=()=>t!==c&&r<e.length,s=e=>'"'===e||"'"===e,a=()=>{for(;E()&&l(e[r]);)r++},N=t=>{if(E()){if("<"===e[r]){let t="<";return r++,E()&&"/"===e[r]?(r++,t="</"):E()&&"!"===e[r]&&"-"===e[r+1]&&"-"===e[r+2]&&(r++,r++,r++,t="\x3c!--"),t}if("="===e[r]||">"===e[r]){const t=e[r];return r++,t}}return i(!!t)},i=t=>{const n=t?/[^>=<]/u:/[a-zA-Z0-9_:-]/;let s=r;for(;E()&&e[r].match(n);)r++;return o(e.substring(s,r))},O=()=>{const l=r;a();const A=r-l;if(E())if(t&&t.type===u.OPEN_BRACKET){a();const e=N(!1);t=T(u.ELEMENT_TYPE,e)}else if(t&&t.type===u.ASSIGN){E()&&s(n())&&r++;let a=r;for(;E()&&!s(n());)r++;const c=o(e.substring(a,r));r++,t=T(u.ATTRIB_VALUE,c)}else{a();let s=N(!0);switch(s){case"=":t=t.type===u.ATTRIB_NAME?T(u.ASSIGN):T(u.CONTENT,s);break;case"</":{const n=r;for(;">"!==e[r];)r++;t=T(u.CLOSE_ELEMENT,e.substring(n,r)),r++;break}case"\x3c!--":{const t=["!","-","-"];for(;E()&&(">"!==t[2]||"-"!==t[1]||"-"!==t[0]);)t.shift(),t.push(e[r]),r++;return O()}case">":t=T(u.CLOSE_BRACKET);break;case"<":t=T(u.OPEN_BRACKET);break;default:if(s&&s.length>0){if(t.type===u.CLOSE_BRACKET){let e="";"<"!==n()&&(e=i(!0)),t=T(u.CONTENT,s+e)}else if(t.type!==u.ATTRIB_NAME&&t.type!==u.CONTENT)t.type===u.CLOSE_ELEMENT?(s=" ".repeat(A)+s,t=T(u.CONTENT,s)):t=T(u.ATTRIB_NAME,s);else{const e=" ".repeat(A)+s;t=T(u.CONTENT,e)}break}{const t='Unknown Syntax : "'+e[r]+'"';throw new Error(t)}}}else t=c;return t};return{peek:n,next:O,hasNext:E}}};const{createLexer:i}=N,{Token:O,TOKEN_TYPE:A}=a,[p,f,h,C]=["ROOT","ELEMENT","ATTRIBUTE","CONTENT"],_=(e,t)=>({type:e,value:t}),v=e=>_(C,e),y=(e,t,r)=>_(f,{type:e,attributes:t,children:r}),L=(e,t)=>_(h,{name:e,value:t}),R=(e,t)=>{const r=[];for(;e.hasNext();){const n=e.next();switch(n.type){case A.OPEN_BRACKET:{const t=e.next(),n=B(e);let E=R(e,t);E&&E.length>0&&E[0].type===A.CONTENT&&(E=S(E)),r.push(y(t.value,n,E));break}case A.CLOSE_ELEMENT:if(n.value===t.value)return r;break;case A.CONTENT:r.push(v(n.value));break;case A.EOF:return r;default:throw new Error(`Unknown Lexem type: ${n.type} "${n.value}, scoping element: ${t.value}"`)}}return r},B=e=>{const t=[];let r=e.peek();if(!e.hasNext()||r&&r.type===A.CLOSE_BRACKET)return t;for(r=e.next();e.hasNext()&&r&&r.type!==A.CLOSE_BRACKET;){const n=r;e.next();const E=e.next(),s=L(n.value,E.value);t.push(s),r=e.next()}return t};function S(e){let t=[],r="";return e.forEach((e=>{e.type===A.CONTENT?r+=e.value:(r.length&&(t.push(v(r)),r=""),t.push(e))})),r.length&&t.push(v(r)),t}var b={transpile:function(e,t){const r=(e=>_(p,{children:R(e,O(p,"ROOT"))}))(i(e));return t?t.convert(r):r},Node:_,ElementNode:y,AttribNode:L};const x=s,{transpile:g}=b;var k=e({convertXML:function(e,t){return g(e,t||x)},createAST:function(e){return g(e)}});module.exports=k;
